model useBeforeDefineModel = {
  subModel: {
    useBeforeDefineModel: UseBeforeDefineModelOnSubModel
  }
};

model UseBeforeDefineModelOnSubModel = {
  m: MyModel,
}

model MyModel = {
  stringfield: string,
  bytesfield: bytes,
  stringarrayfield: [ string ],
  mapfield: map[string]string,
  name: string(name='realName'),
  submodel: {
    stringfield: string,
  } (name='SubModel'),
  subarray: [ M ] (name='SubArray'),
  maparray: [ map[string]any ] (name='MapArray'),
  object: object,
  numberfield: integer,
  readable: readable,
  existModel: M,
  classEndTime?: string(description='结束时间', example='2018-10-10T10:10:00Z', pattern='\\\\d{4}[-]\\\\d{1,2}[-]\\\\d{1,2}(\\\\s\\\\d{2}:\\\\d{2}(:\\\\d{2})?)?', name='class_end_time'),
  maxLength?: string(description='最大长度', example='10000', maxLength='10', name='max-length'),
  minLength?: string(description='最小长度', example='10000', minLength='0', name='min-length'),
  maximum?: long(description='校验最大值', example='10000', maximum='99000000'),
  minimum?: long(description='校验最小值', example='10000', minimum='0'),
  test3: [[string]](description='test3 desc', name='test3'),
  arrayArrayModel: [[M]] (name='ArrayArrayModel'),
  arrayMapModel: [ map[string]M ] (name='ArrayMapModel'),

  mapModel: map[string]M (name='MapModel'),
  submodelMap: map[string]MyModel.submodel (name='SubmodelMap'),

  subModelModel: {
    subModel: [ M ]
  } (name='SubModelModel'),
  mapArrayMap?: map[string][ map[string]string ] (name='MapArrayMap'),
  mapArrayModel?: map[string][ M ] (name='MapArrayModel'),
};

model M = {
    oneself: M,
    selfArray: [M],
    selfMap: map[string]M,
    selfArrayMap: [ map[string]M ],
    selfArrayArray: [ [ M ] ]
};

model Node {
  child?: {
    subChild?: {
      childNode?: Node(name='childNode'),
    }(name='subChild'),
  }(name='child'),
}